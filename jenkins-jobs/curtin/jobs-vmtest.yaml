# Ubuntu Server QA Jenkins Jobs
# Copyright (C) 2016-2017 Canonical Ltd.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version..
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

---
- job:
    name: curtin-vmtest-devel-amd64
    defaults: curtin
    node: torkoal
    parameters:
      - landing-candidate:
          default: https://git.launchpad.net/curtin
      - landing-candidate-branch
      - nose-args:
          default_nose_args:
      - vmtest-add-repos:
          default_vmtest_add_repos:
    triggers:
      - timed: "H 0 * * *"
    builders:
      - vmtest-devel
    publishers:
      - curtin-archive-results
      - email-curtin-qa
    wrappers:
      - timestamps
      - workspace-cleanup

- job:
    name: curtin-vmtest-devel-arm64
    defaults: curtin
    node: metal-arm64
    triggers:
      - timed: "H H * * *"
    parameters:
      - landing-candidate:
          default: https://git.launchpad.net/curtin
      - landing-candidate-branch
      - nose-args:
          default_nose_args: tests/vmtests/test_uefi_basic.py
      - vmtest-add-repos:
          default_vmtest_add_repos:
    wrappers:
      - timestamps
      - workspace-cleanup
    builders:
      - vmtest-devel
    publishers:
      - curtin-archive-results
      - email-curtin-qa

- job:
    name: curtin-vmtest-devel-ppc64el
    defaults: curtin
    node: metal-ppc64el
    triggers:
      - timed: "H H * * *"
    parameters:
      - landing-candidate:
          default: https://git.launchpad.net/curtin
      - landing-candidate-branch
      - nose-args:
          default_nose_args: tests/vmtests/test_basic.py
      - vmtest-add-repos:
          default_vmtest_add_repos:
    builders:
      - vmtest-devel
    publishers:
      - curtin-archive-results
      - email-curtin-qa
    wrappers:
      - timestamps
      - workspace-cleanup

- job:
    name: curtin-vmtest-devel-s390x
    defaults: curtin
    node: metal-s390x
    parameters:
      - landing-candidate:
          default: https://git.launchpad.net/curtin
      - landing-candidate-branch
      - nose-args:
          default_nose_args: tests/vmtests/test_basic.py
      - vmtest-add-repos:
          default_vmtest_add_repos:
    builders:
      - vmtest-devel
    publishers:
      - curtin-archive-results
      - email-curtin-qa
    wrappers:
      - timestamps
      - workspace-cleanup

- job:
    name: curtin-vmtest-devel-debug
    defaults: curtin
    node: torkoal
    parameters:
      - landing-candidate:
          default: https://git.launchpad.net/curtin
      - landing-candidate-branch
      - nose-args:
          default_nose_args:
      - vmtest-add-repos:
          default_vmtest_add_repos:
    builders:
      - vmtest-devel
    publishers:
      - curtin-archive-results
    wrappers:
      - timestamps
      - workspace-cleanup

- job:
    name: curtin-vmtest-devel-amd64-proposed
    defaults: curtin
    node: torkoal
    triggers:
      - timed: "H 8 * * 7"
    parameters:
      - landing-candidate:
          default: https://git.launchpad.net/curtin
      - landing-candidate-branch
      - nose-args:
          default_nose_args:
      - vmtest-add-repos:
          default_vmtest_add_repos: "proposed"
      - string:
          name: vmtest_filters
          default: "target_distro=ubuntu"
    publishers:
      - email-curtin-qa
      - curtin-archive-results
    builders:
      - vmtest-devel
    wrappers:
      - timestamps
      - workspace-cleanup

- job:
    name: curtin-cloud-init-sru
    defaults: curtin
    node: torkoal
    parameters:
      - landing-candidate:
          default: https://git.launchpad.net/curtin
      - landing-candidate-branch
      - vmtest-add-repos:
          default_vmtest_add_repos: "ppa:cloud-init-dev/proposed"
      - string:
          name: CURTIN_VMTEST_UPGRADE_PACKAGES
          default: "cloud-init"
      - choice:
          name: CURTIN_VMTEST_SYSTEM_UPGRADE
          choices:
            - 'false'
            - 'true'
      - string:
          name: vmtest_filters
          default: "target_distro=ubuntu test_type=network"
    wrappers:
      - timestamps
      - workspace-cleanup
    builders:
      - vmtest-devel
    publishers:
      - email-curtin-qa
      - curtin-archive-results

- builder:
    name: vmtest-sync-images
    builders:
      - shell: |
          #!/bin/bash

          set -ufx -o pipefail

          # The images have been updated recently enough => exit 0
          test "$(find /srv/images/.vmtest-data -maxdepth 0 -mmin -1080)" && exit 0

          # Is vmtest-sync-images already running?
          vsc_count=$(pgrep -c vmtest-sync-images)
          rc=$?
          ((rc > 1)) && exit 1 # pgrep error
          ((vsc_count == 1)) && exit 0 # vmtest-sync-images already running
          ((vsc_count >= 2)) && exit 1 # many vmtest-sync-images running => heads-up

          git clone https://git.launchpad.net/curtin curtin-sync-images || exit 1
          cd curtin-sync-images || exit 1

          ./tools/vmtest-sync-images || exit 1

- builder:
    name: vmtest-devel
    builders:
      - vmtest-sync-images
      - shell: |
          #!/bin/bash

          retry() (for i in {0..5}; do sleep $((8*i**3)) && echo "Trying: ${*:1}" >&2 && "${@:1}" && break; done)

          if [ "$(hostname)" = "torkoal" ]; then
              export TMPDIR=/var/lib/jenkins/tmp/
          fi

          # construct vmtest filters
          filter_args=""
          if [ -n "${vmtest_filters}" ]; then
              f=""
              for f in ${vmtest_filters}; do
                  filter_args="$filter_args --filter=$f"
              done
          fi
          echo "test filter args: \"$filter_args\""

          # Helpful in debugging, but fill up Jenkins if all test fail
          # export CURTIN_VMTEST_KEEP_DATA_FAIL=all
          # export CURTIN_VMTEST_TAR_DISKS=1

          retry git clone --branch=${landing_candidate_branch} ${landing_candidate} curtin-${BUILD_NUMBER}
          cd curtin-${BUILD_NUMBER}
          git remote add upstream https://git.launchpad.net/curtin
          retry git fetch upstream --tags

          ./tools/vmtest-system-setup
          set +e
          ./tools/jenkins-runner -p4 $filter_args ${nose_args}
          RET=$?

          cd ${WORKSPACE}
          echo "cleanup: deleting links and image files"
          find output -type l -delete
          find output -type f -name "*.img" -delete

          # Return Skipped as Passed
          [ $RET -eq 2 ] && RET=0

          exit $RET
