---
# Ubuntu Server QA Jenkins Jobs
# Copyright (C) 2016 Canonical Ltd.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version..
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

- job:
    name: curtin-ci-trigger
    defaults: curtin
    triggers:
      - timed: H/15 * * * *
    wrappers:
      # We run every 15 minutes, and runs usually take a few seconds
      - timeout:
          timeout: 15
          fail: true
    builders:
      - shell: |
          #!/bin/bash
          set -eux

          launchpadTrigger --lock-name=${JOB_NAME} \
                           --job=curtin-ci \
                           --branch=lp:curtin \
                           --trigger-ci

- job:
    name: curtin-autoland-trigger
    defaults: curtin
    node: metal-amd64
    triggers:
      - timed: H/15 * * * *
    wrappers:
      # We run every 15 minutes, and runs usually take a few seconds
      - timeout:
          timeout: 15
          fail: true
    builders:
      - shell: |
          #!/bin/bash
          set -eux

          launchpadTrigger --lock-name=${JOB_NAME} \
                           --job=curtin-autoland-test \
                           --branch=lp:curtin \
                           --autoland

- job:
    name: curtin-ci
    defaults: curtin
    project-type: matrix
    axes:
      - axis:
          type: slave
          name: nodes
          values:
            - metal-amd64
            - metal-ppc64el
            - metal-arm64
            - metal-s390x
    properties:
      - build-discarder:
          days-to-keep: 7
          num-to-keep: 40
    parameters:
      - landing-candidate:
          default: https://git.launchpad.net/curtin
      - landing-candidate-branch
      - candidate-revision
      - merge-proposal
    auth-token: BUILD_ME
    publishers:
      - archive:
          artifacts: 'output/**'
          excludes: 'output/debug.log, **/*img'
          allow-empty: true
      - trigger-parameterized-builds:
          - project: admin-lp-git-vote
            condition: UNSTABLE_OR_WORSE
            predefined-parameters: |
              MERGE_BRANCH=${landing_candidate}
              MERGE_REVISION=${candidate_revision}
              MERGE_URL=${merge_proposal}
              TEST_RESULT=FAILED
              TEST_URL=${BUILD_URL}
      - trigger-parameterized-builds:
          - project: admin-lp-git-vote
            condition: SUCCESS
            predefined-parameters: |
              MERGE_BRANCH=${landing_candidate}
              MERGE_REVISION=${candidate_revision}
              MERGE_URL=${merge_proposal}
              TEST_RESULT=PASSED
              TEST_URL=${BUILD_URL}
    wrappers:
      - timestamps
      - workspace-cleanup
      - timeout:
          timeout: 60
          fail: true
    builders:
      - vmtest-sync-images
      - shell: |
          #!/bin/bash
          set -eux

          # Retry a command 5 times over 30 minutes with cubic backoff
          retry() (for i in {0..5}; do sleep $((8*i**3)) && echo "Trying: ${*:1}" >&2 && "${@:1}" && break; done)

          branch=${landing_candidate//lp:/https://git.launchpad.net/}
          retry git clone --branch=${landing_candidate_branch} $branch curtin-${BUILD_NUMBER}
          cd curtin-${BUILD_NUMBER}
          git rev-parse HEAD
          git remote add upstream https://git.launchpad.net/curtin
          retry git fetch upstream --tags

          no_proxy=launchpad.net https_proxy="http://squid.internal:3128" tox

          if [[ $(arch) == x86_64 ]]; then
              ./tools/jenkins-runner --skip-images-dirlock -p 4 tests/vmtests/test_basic.py:{XenialGA,Bionic,Focal}TestBasic
          else
              # This is only apparently a wider set of tests, in practice each architecture
              # supports only a subset of those, the others will (and have to be) skipped
              # without resulting in a test failure.
              ./tools/jenkins-runner --skip-images-dirlock -p 4 \
                  tests/vmtests/test_basic.py:{XenialGA,Focal}Test{,Scsi}Basic \
                  tests/vmtests/test_uefi_basic.py:{XenialGA,Focal}UefiTestBasic
          fi

- job:
    name: curtin-autoland-test
    defaults: curtin
    project-type: matrix
    axes:
      - axis:
          type: slave
          name: nodes
          values:
            - metal-amd64
            - metal-ppc64el
            - metal-arm64
            - metal-s390x
    parameters:
      - landing-candidate:
          default: 'https://git.launchpad.net/curtin'
      - landing-candidate-branch
      - candidate-revision
      - merge-proposal
    auth-token: BUILD_ME
    publishers:
      - trigger-parameterized-builds:
          - project: admin-lp-git-autoland
            condition: UNSTABLE_OR_WORSE
            predefined-parameters: |
              MERGE_REVISION=${candidate_revision}
              MERGE_URL=${merge_proposal}
              TEST_RESULT=FAILED
              TEST_URL=${BUILD_URL}
      - trigger-parameterized-builds:
          - project: admin-lp-git-autoland
            condition: SUCCESS
            predefined-parameters: |
              MERGE_REVISION=${candidate_revision}
              MERGE_URL=${merge_proposal}
              TEST_RESULT=PASSED
              TEST_URL=${BUILD_URL}
    wrappers:
      - timestamps
      - workspace-cleanup
      - timeout:
          timeout: 60
          fail: true
    builders:
      - vmtest-sync-images
      - shell: |
          #!/bin/bash
          set -eux

          retry() (for i in {0..5}; do sleep $((8*i**3)) && echo "Trying: ${*:1}" >&2 && "${@:1}" && break; done)

          retry git clone lp:curtin
          cd curtin

          git remote add autoland ${landing_candidate}
          retry git fetch autoland
          git merge autoland/${landing_candidate_branch} --squash
          git commit -m "test commit"

          no_proxy=launchpad.net https_proxy="http://squid.internal:3128" tox

          if [[ $(arch) == x86_64 ]]; then
              ./tools/jenkins-runner --skip-images-dirlock -p 2 tests/vmtests/test_basic.py:{XenialGA,Bionic,Focal}TestBasic
          else
              ./tools/jenkins-runner --skip-images-dirlock -p 2 \
                  tests/vmtests/test_basic.py:{XenialGA,Focal}Test{,Scsi}Basic \
                  tests/vmtests/test_uefi_basic.py:{XenialGA,Focal}UefiTestBasic
          fi
